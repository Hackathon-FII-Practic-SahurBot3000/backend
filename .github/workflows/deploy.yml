name: Build & Deploy Spring Boot App

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - feature/fix-google-auth

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create deployment package
      run: |
        # Create a tar archive of the source code
        tar -czf app-source.tar.gz --exclude='.git' --exclude='target' --exclude='.idea' .

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          # Set deployment variables
          APP_NAME="hackathon-backend"
          APP_DIR="/opt/$APP_NAME"
          
          echo "Starting deployment..."
          
          # Create app directory if it doesn't exist
          sudo mkdir -p $APP_DIR
          
          # Clean up existing files (except logs)
          cd $APP_DIR
          sudo find . -maxdepth 1 -type f -not -name "*.log" -delete 2>/dev/null || true
          sudo rm -rf src scripts target pom.xml *.tar.gz 2>/dev/null || true
          
          echo "Deployment completed - ready for file transfer!"

    - name: Transfer source code
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "app-source.tar.gz"
        target: "/opt/hackathon-backend/"

    - name: Extract and run deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          APP_NAME="hackathon-backend"
          APP_DIR="/opt/$APP_NAME"
          
          cd $APP_DIR
          
          # Extract the source code
          echo "Extracting source code..."
          tar -xzf app-source.tar.gz
          rm app-source.tar.gz
          
          # Make scripts executable
          chmod +x scripts/deploy.sh scripts/manage.sh scripts/setup-environment.sh
          
          # Run deployment script
          echo "Running deployment script..."
          ./scripts/deploy.sh
          
          echo "Deployment completed!"
          
          # Show service status
          echo "=== Service Status ==="
          sudo systemctl is-active $APP_NAME || true
          sudo systemctl status $APP_NAME --no-pager --lines=5 || true
          
          # Show recent logs
          echo "=== Recent Logs ==="
          sudo journalctl -u $APP_NAME --no-pager --lines=10 || true
          
          # Test health endpoint
          echo "=== Health Check ==="
          sleep 15
          curl -f http://localhost:8080/actuator/health || echo "Health check failed - application may still be starting"
