name: Deploy to VPS

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Get lowercased image name
      id: prep
      run: |
        IMAGE_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ steps.prep.outputs.IMAGE_NAME }}:latest

    - name: SSH and Deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        port: 22
        script: |
          docker pull ${{ env.REGISTRY }}/${{ steps.prep.outputs.IMAGE_NAME }}:latest
          docker stop springapp || true
          docker rm springapp || true
          docker run -d \
            --name springapp \
            -e DB_URL="${{ secrets.DB_URL }}" \
            -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            -e SPRING_PROFILES_ACTIVE=prod \
            -p 8080:8080 \
            ${{ env.REGISTRY }}/${{ steps.prep.outputs.IMAGE_NAME }}:latest